name: Deploy to Amazon ECS
on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

# secrets:
#   DOCKERHUB_USERNAME: 
#   DOCKERHUB_PASSWORD: 
#   AWS_ACCESS_KEY_ID:
#   AWS_SECRET_ACCESS_KEY:

env:
  IMAGE_NAME: vmdo_frontend
  AWS_REGION: eu-central-1                         
  ECS_SERVICE: vmdo-service            
  ECS_CLUSTER: test-cluster-vmdo             
  ECS_TASK_DEFINITION: aws/td.json 
  CONTAINER_IMAGE: ezekielkaeyros/vmdo_vmdo-frontend
  CONTAINER_NAME: vmdo-deploy

defaults:
  run:
    shell: bash
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ env.AWS_REGION }}
        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: ${{ env.ECS_TASK_DEFINITION }}
            container-name: ${{ env.CONTAINER_NAME }}
            image: ${{ steps.build-image.outputs.image }}

        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: ${{ env.ECS_SERVICE }}
            cluster: ${{ env.ECS_CLUSTER }}
            wait-for-service-stability: true